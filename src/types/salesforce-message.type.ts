/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */
import type { ValidateFunction } from 'ajv'
import { ValidationError } from 'ajv'

export interface SalesforceMessage {
    data: {
        schema?: string
        payload: unknown
        event: {
            EventUuid: string
            replayId: number
            EventApiName: string
        }
    }
    channel?: string
}

export const SalesforceMessage = {
    validate: (await import('./schemas/salesforce-message.schema.js')).validate as ValidateFunction<SalesforceMessage>,
    get schema() {
        return SalesforceMessage.validate.schema
    },
    get errors() {
        return SalesforceMessage.validate.errors ?? undefined
    },
    is: (o: unknown): o is SalesforceMessage => SalesforceMessage.validate(o) === true,
    assert: (o: unknown) => {
        if (!SalesforceMessage.validate(o)) {
            throw new ValidationError(SalesforceMessage.errors ?? [])
        }
    },
} as const
