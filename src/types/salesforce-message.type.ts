/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */

import type { DefinedError, ValidateFunction } from 'ajv'

import { validate as SalesforceMessageValidator } from './schemas/salesforce-message.schema.js'

export interface SalesforceMessage {
    data: {
        schema?: string | undefined
        payload: unknown
        event: {
            EventUuid: string
            replayId: number
            EventApiName: string
        }
    }
    channel?: string | undefined
}

export const SalesforceMessage = {
    validate: SalesforceMessageValidator as ValidateFunction<SalesforceMessage>,
    get schema() {
        return SalesforceMessage.validate.schema
    },
    get errors() {
        return SalesforceMessage.validate.errors ?? undefined
    },
    is: (o: unknown): o is SalesforceMessage => SalesforceMessage.validate(o) === true,
    parse: (o: unknown): { right: SalesforceMessage } | { left: DefinedError[] } => {
        if (SalesforceMessage.is(o)) {
            return { right: o }
        }
        return { left: (SalesforceMessage.errors ?? []) as DefinedError[] }
    },
} as const
